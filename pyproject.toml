[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ticktick-mcp-v2"
version = "1.0.5"
description = "TickTick MCP Server - Enhanced Version with Chinese Support"
authors = [
    {name = "TickTick MCP Team", email = "dev@example.com"}
]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
keywords = ["ticktick", "mcp", "model-context-protocol", "task-management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

dependencies = [
    "mcp>=1.0.0",
    "pandas>=2.2.0",
    "numpy>=1.24.0",
    "pytz>=2023.3",
    "python-dateutil>=2.8.2",
    "python-dotenv>=1.0.0",
    "httpx>=0.24.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "nest-asyncio>=1.5.0",
    "pytest-asyncio>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "build>=0.10.0",
    "twine>=4.0.0",
    "black>=25.1.0"
]

[project.scripts]
ticktick-mcp = "src.cli:cli"

[project.urls]
Homepage = "https://github.com/example/ticktick-mcp-v2"
Repository = "https://github.com/example/ticktick-mcp-v2"
Issues = "https://github.com/example/ticktick-mcp-v2/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

[tool.ruff]
target-version = "py310"
line-length = 100
extend-exclude = [
    "tests/**",
]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "YTT", "ANN", "S", "BLE", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SIM", "TID", "TCH", "ARG", "PTH", "ERA", "PGH", "PL", "TRY", "NPY", "RUF"]
ignore = ["ANN401", "S101", "PLR0913", "PLR0912", "PLR0915"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",       # assert in tests
    "ANN",        # type annotations relaxed in tests
    "PLR2004",    # magic values in tests
    "E501",       # long lines in messages/strings
    "SIM117",     # nested with/context managers
    "PLC0415",    # imports inside test bodies
    "RUF003",     # unicode chars in comments
    "PTH107", "PTH110", "PTH118", "PTH120", "PTH123",  # os.path/open usage
    "SLF001",     # private member access for mocking
    "PT011",      # pytest.raises too broad
    "B017",       # assert blind exception
    "S607",       # partial path process start in helper scripts
]
"src/cli.py" = ["T20"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "unit: Unit test marker",
    "integration: Integration test marker",
    "e2e: End-to-end test marker",
    "slow: Slow test marker",
    "auth: Auth related test marker",
    "mcp: MCP related test marker",
    "asyncio: Async test marker"
]
